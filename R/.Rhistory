ABC
ABC <- t(data.frame(test = A, B, C))
ABC
ABC <- t(data.frame( A, B, C))
ABC
str_split(ABC, " ")
str_split(ABC, " ", simplify = T)
head(GGdream_Data)
################### [데이터드림림 Data] ###################
GGdream_Data <- read_delim("../data/데이터드림/2021년업종별사업체현황.csv", locale = locale(encoding = "EUC-KR"), delim = ",", col_names = T)
head(GGdream_Data)
head(GGdream_Data$소재지지번주소)
test <- str_split(GGdream_Data$소재지지번주소, " ")
test
test <- str_split(GGdream_Data$소재지지번주소, " ", simplify = T)
View(test)
GGdream_adress <- str_split(GGdream_Data$소재지지번주소, " ", simplify = T)
GGdream_adress
GGdream_address <- str_split(GGdream_Data$소재지지번주소, " ", simplify = T)
View(GGdream_address)
colnames(data_SSN)
colnames(data_JWH)
colnames(data_WSY)
data_WSY <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_원수연.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
rename(매출액 = `매출액(백만원`)
data_WSY <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_원수연.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
rename(매출액 = `매출액(백만원)`)
data_WSY
colnames(data_SSN)
colnames(data_JWH)
colnames(data_WSY)
data_SSN %>%
bind_rows(data_JWH, data_WSY)
data_SSN %>%
mutate(상장일 = as.numeirc(상장일))
data_SSN %>%
mutate(상장일 = as.numeric(상장일))
summary(data_SSN)
summary(data_JWH)
summary(data_WSY)
data_SSN
data_JWH
## SSN(486), JWH(445), WSY(537)
data_SSN <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_송새눈_240921.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0)
data_SSN
## SSN(486), JWH(445), WSY(537)
data_SSN <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_송새눈_240921.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0)
data_JWH <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_조원호_수정2.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0)
data_WSY <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_원수연.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
rename(매출액 = `매출액(백만원)`)
data_SSN %>%
bind_rows(data_JWH, data_WSY)
## SSN(486), JWH(445), WSY(537)
data_SSN <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_송새눈_240921.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0)
data_JWH <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_조원호_수정2.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0)
data_WSY <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_원수연.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
rename(매출액 = `매출액(백만원)`)
data_SSN %>%
bind_rows(data_JWH, data_WSY)
data_SSN
summary(data_SSN)
summary(data_JWH)
summary(data_WSY)
## SSN(486), JWH(445), WSY(537)
data_SSN <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_송새눈_240921.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0)
data_JWH <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_조원호_수정2.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
mutate(직원총수 = as.numeric(직원총수))
data_WSY <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_원수연.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
rename(매출액 = `매출액(백만원)`) %>%
mutate(직원총수 = as.numeric(직원총수))
data_SSN %>%
bind_rows(data_JWH, data_WSY)
mergedData <- data_SSN %>%
bind_rows(data_JWH, data_WSY)
mergedData
View(mergedData)
head(mergedData_KOS)
mergedData_KOS <- data_SSN %>%
bind_rows(data_JWH, data_WSY)
head(mergedData_KOS)
mergedData_KOS_address <- str_split(GGdream_Data$지번주소, " ", simplify = T)
mergedData_KOS_address
mergedData_KOS_address <- str_split(mergedData_KOS$지번주소, " ", simplify = T)
mergedData_KOS_address
View(mergedData_KOS_address)
GGdream_address
B %in% A
AA <- c("사과", "배", "감")
BB <- c("오렌지", "사과", "포도", "배")
AA %in% BB
GGdream_address
GGdream_address[1]
head(GGdream_address)
GGdream_address[1,]
mergedData_KOS_address[1,]
KOS_1 <- GGdream_address[1,]
All_1 <- mergedData_KOS_address
KOS_1 %in% All_1
KOS_1
KOS_1[KOS_1 == ""] <- NA
KOS_1
All_1 <- mergedData_KOS_address
All_1[A == ""] <- NA
All_1
All_1[All_1 == ""] <- NA
All_1
All_1
All_1 <- mergedData_KOS_address[1,]
All_1[All_1 == ""] <- NA
All_1
KOS_1 %in% All_1
KOS_1 <- GGdream_address[1,]
KOS_1[KOS_1 == ""] <- NA
All_1 <- mergedData_KOS_address[1,]
All_1[All_1 == ""] <- NA
KOS_1
KOS_1
KOS_1 %>% filter(!is.na(KOS_1))
KOS_1 %>% filter(!is.na(.))
KOS_1 %>% filter(KOS_1 != NA)
KOS_1
KOS_1[KOS_1 != ""]
KOS_1 <- GGdream_address[1,]
KOS_1[KOS_1 != ""]
KOS_1 <- GGdream_address[1,]
KOS_1[KOS_1 != ""]
All_1 <- mergedData_KOS_address[1,]
All_1[All_1 != ""]
All_1
KOS_1 %in% All_1
KOS_1 %in% All_1
KOS_1
KOS_1 <- GGdream_address[1,]
KOS_1 <- KOS_1[KOS_1 != ""]
All_1 <- mergedData_KOS_address[1,]
All_1 <- All_1[All_1 != ""]
KOS_1 %in% All_1
All_1
KOS_1
##### 비교교 #####
KOS_1 <- mergedData_KOS_address[1,]
KOS_1 <- KOS_1[KOS_1 != ""]
All_1 <- GGdream_address[1,]
All_1 <- All_1[All_1 != ""]
KOS_1 %in% All_1
setwd("C:/Users/sidus/Desktop/GRI Github/TNFD/R")
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
library(tidyverse)
library(stringr)
################### [데이터드림림 Data] ###################
GGdream_Data <- read_delim("../data/데이터드림/2021년업종별사업체현황.csv", locale = locale(encoding = "EUC-KR"), delim = ",", col_names = T)
GGdream_Data <- GGdream_Data %>%
mutate(소재지지번주소 = gsub("번지", "", 소재지지번주소 ))
GGdream_address <- str_split(GGdream_Data$소재지지번주소, " ", simplify = T)
## SSN(486), JWH(445), WSY(537)
data_SSN <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_송새눈_240921.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0)
data_JWH <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_조원호_수정2.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
mutate(직원총수 = as.numeric(직원총수))
data_WSY <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_원수연.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
rename(매출액 = `매출액(백만원)`) %>%
mutate(직원총수 = as.numeric(직원총수))
mergedData_KOS <- data_SSN %>%
bind_rows(data_JWH, data_WSY) %>%
mutate(회사명 = gsub("_0", "", 회사명)) %>%
filter(!grepl("_", 회사명))
mergedData_KOS_address <- str_split(mergedData_KOS$지번주소, " ", simplify = T)
matchNumber_All <- c()
matchNumberMatrix <- matrix(nrow = nrow(mergedData_KOS_address), ncol = 10)
for ( i in 1:nrow(mergedData_KOS_address)) {
KOS_each <- mergedData_KOS_address[i,]
KOS_each <- KOS_each[KOS_each != ""]
for ( j in 1:nrow(GGdream_address)) {
All_each <- GGdream_address[j,]
All_each <- All_each[All_each != ""]
result_each <- sum(KOS_each %in% All_each)
matchNumber_All[j] <- result_each
}
matchNumber <- which(matchNumber_All == max(matchNumber_All))
if (length(matchNumber) >= 10 ) {
matchNumberMatrix[i,1] <- 0
} else {
matchNumberMatrix[i,c(1:length(matchNumber))] <- matchNumber
}
}
nrow(mergedData_KOS_address)
matchNumberMatrix
write.csv(matchNumberMatrix, "matchNumberMatrix.csv")
setwd("C:/Users/sidus/Desktop/GRI Github/TNFD/R")
setwd("C:/Users/sidus/Desktop/GRI Github/TNFD/R")
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
library(tidyverse)
library(stringr)
################### [데이터드림림 Data] ###################
GGdream_Data <- read_delim("../data/데이터드림/2021년업종별사업체현황.csv", locale = locale(encoding = "EUC-KR"), delim = ",", col_names = T)
head(GGdream_Data)
nrow(GGdream_Data)
GGdream_Data <- GGdream_Data %>%
mutate(소재지지번주소 = gsub("번지", "", 소재지지번주소 ))
GGdream_address <- str_split(GGdream_Data$소재지지번주소, " ", simplify = T)
## SSN(486), JWH(445), WSY(537)
data_SSN <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_송새눈_240921.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0)
data_JWH <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_조원호_수정2.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
mutate(직원총수 = as.numeric(직원총수))
data_WSY <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_원수연.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
rename(매출액 = `매출액(백만원)`) %>%
mutate(직원총수 = as.numeric(직원총수))
mergedData_KOS <- data_SSN %>%
bind_rows(data_JWH, data_WSY) %>%
mutate(회사명 = gsub("_0", "", 회사명)) %>%
filter(!grepl("_", 회사명))
mergedData_KOS_address <- str_split(mergedData_KOS$지번주소, " ", simplify = T)
matchNumber_All <- c()
matchNumberMatrix <- matrix(nrow = nrow(mergedData_KOS_address), ncol = 10)
i = 1
KOS_each <- mergedData_KOS_address[i,]
KOS_each <- KOS_each[KOS_each != ""]
for ( j in 1:nrow(GGdream_address)) {
All_each <- GGdream_address[j,]
All_each <- All_each[All_each != ""]
result_each <- sum(KOS_each %in% All_each)
matchNumber_All[j] <- result_each
}
matchNumber <- which(matchNumber_All == max(matchNumber_All))
if (length(matchNumber) >= 10 ) {
matchNumberMatrix[i,1] <- 0
} else {
matchNumberMatrix[i,c(1:length(matchNumber))] <- matchNumber
}
matchNumberMatrix
setwd("C:/Users/sidus/Desktop/GRI Github/TNFD/R")
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
library(tidyverse)
library(stringr)
################### [데이터드림림 Data] ###################
GGdream_Data <- read_delim("../data/데이터드림/2021년업종별사업체현황.csv", locale = locale(encoding = "EUC-KR"), delim = ",", col_names = T)
GGdream_Data <- GGdream_Data %>%
mutate(소재지지번주소 = gsub("번지", "", 소재지지번주소 ))
## SSN(486), JWH(445), WSY(537)
data_SSN <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_송새눈_240921.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0)
data_JWH <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_조원호_수정2.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
mutate(직원총수 = as.numeric(직원총수))
data_WSY <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_원수연.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
rename(매출액 = `매출액(백만원)`) %>%
mutate(직원총수 = as.numeric(직원총수))
mergedData_KOS <- data_SSN %>%
bind_rows(data_JWH, data_WSY) %>%
mutate(회사명 = gsub("_0", "", 회사명)) %>%
filter(!grepl("_", 회사명))
mergedData_KOS_address <- str_split(mergedData_KOS$지번주소, " ", simplify = T)
matchNumber_All <- c()
matchNumberMatrix <- matrix(nrow = nrow(mergedData_KOS_address), ncol = 10)
for ( i in 1:nrow(mergedData_KOS_address)) {
KOS_each <- mergedData_KOS_address[i,]
KOS_each <- KOS_each[KOS_each != ""]
for ( j in 1:nrow(GGdream_address)) {
All_each <- GGdream_address[j,]
All_each <- All_each[All_each != ""]
result_each <- sum(KOS_each %in% All_each)
matchNumber_All[j] <- result_each
}
matchNumber <- which(matchNumber_All == max(matchNumber_All))
if (length(matchNumber) >= 10 ) {
matchNumberMatrix[i,1] <- 0
} else {
matchNumberMatrix[i,c(1:length(matchNumber))] <- matchNumber
}
}
GGdream_address <- str_split(GGdream_Data$소재지지번주소, " ", simplify = T)
for ( i in 1:nrow(mergedData_KOS_address)) {
KOS_each <- mergedData_KOS_address[i,]
KOS_each <- KOS_each[KOS_each != ""]
for ( j in 1:nrow(GGdream_address)) {
All_each <- GGdream_address[j,]
All_each <- All_each[All_each != ""]
result_each <- sum(KOS_each %in% All_each)
matchNumber_All[j] <- result_each
}
matchNumber <- which(matchNumber_All == max(matchNumber_All))
if (length(matchNumber) >= 10 ) {
matchNumberMatrix[i,1] <- 0
} else {
matchNumberMatrix[i,c(1:length(matchNumber))] <- matchNumber
}
}
nrow(GGdream_address)
nrow(mergedData_KOS_address)
setwd("C:/Users/sidus/Desktop/GRI Github/TNFD/R")
library(readxl)
library(dplyr)
library(tidyr)
library(ggplot2)
library(openxlsx)
library(tidyverse)
library(stringr)
################### [데이터드림림 Data] ###################
GGdream_Data <- read_delim("../data/데이터드림/2021년업종별사업체현황.csv", locale = locale(encoding = "EUC-KR"), delim = ",", col_names = T)
GGdream_Data <- GGdream_Data %>%
mutate(소재지지번주소 = gsub("번지", "", 소재지지번주소 ))
GGdream_address <- str_split(GGdream_Data$소재지지번주소, " ", simplify = T)
## SSN(486), JWH(445), WSY(537)
data_SSN <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_송새눈_240921.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0)
data_JWH <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_조원호_수정2.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
mutate(직원총수 = as.numeric(직원총수))
data_WSY <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_원수연.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
rename(매출액 = `매출액(백만원)`) %>%
mutate(직원총수 = as.numeric(직원총수))
mergedData_KOS <- data_SSN %>%
bind_rows(data_JWH, data_WSY) %>%
mutate(회사명 = gsub("_0", "", 회사명)) %>%
filter(!grepl("_", 회사명))
mergedData_KOS_address <- str_split(mergedData_KOS$지번주소, " ", simplify = T)
matchNumber_All <- c()
matchNumberMatrix <- matrix(nrow = nrow(mergedData_KOS_address), ncol = 10)
for ( i in 1:nrow(mergedData_KOS_address)) {
KOS_each <- mergedData_KOS_address[i,]
KOS_each <- KOS_each[KOS_each != ""]
for ( j in 1:nrow(GGdream_address)) {
All_each <- GGdream_address[j,]
All_each <- All_each[All_each != ""]
result_each <- sum(KOS_each %in% All_each)
matchNumber_All[j] <- result_each
}
matchNumber <- which(matchNumber_All == max(matchNumber_All))
if (length(matchNumber) >= 10 ) {
matchNumberMatrix[i,1] <- 0
} else {
matchNumberMatrix[i,c(1:length(matchNumber))] <- matchNumber
}
}
matchNumberMatrix
write.csv(matchNumberMatrix, "matchNumberMatrix.csv")
mergedData_KOS_address[14,]
head(mergedData_KOS)
head(GGdream_Data)
GGdream_Data %>% filter(번호 == 1332596)
GGdream_Data %>% filter(번호 == 1332596) %>% select(소재지지번주소)
GGdream_Data %>% filter(번호 == 651153) %>% select(소재지지번주소)
GGdream_Data %>% filter(번호 == 651154) %>% select(소재지지번주소)
GGdream_Data %>% filter(번호 == 651152) %>% select(소재지지번주소)
mergedData_KOS_address[14.]
mergedData_KOS_address[14,]
mergedData_KOS_address[22,]
GGdream_address[651153,]
mergedData_KOS
GGdream_Data
mergedData_KOS %>%
mutate(번호 = row.names(.))
as.tibble(matchNumberMatrix)
matchNumberTibble <- as.tibble(matchNumberMatrix)
matchNumberTibble
matchNumberTibble %>%
filter(is.na(V2))
matchNumberMatrix_onlyOne <- matchNumberTibble %>%
filter(is.na(V2),
V1 != 0)
matchNumberMatrix_onlyOne
matchNumberTibble
matchNumberTibble <- as.tibble(matchNumberMatrix) %>%
mutate(번호 = row.names(.))
matchNumberTibble
matchNumberMatrix_onlyOne <- matchNumberTibble %>%
filter(is.na(V2),
V1 != 0)
matchNumberMatrix_onlyOne
head(mergedData_KOS)
colnames(mergedData_KOS)
mergedData_KOS
colnames(mergedData_KOS)
mergedData_KOS <- data_SSN %>%
bind_rows(data_JWH, data_WSY) %>%
mutate(번호 = row.names(.)) %>%
mutate(회사명 = gsub("_0", "", 회사명)) %>%
filter(!grepl("_", 회사명))
mergedData_KOS
head(mergedData_KOS)
matchNumberMatrix_onlyOne <- matchNumberTibble %>%
filter(is.na(V2),
V1 != 0) %>%
select(V1)
matchNumberMatrix_onlyOne
matchNumberMatrix_onlyOne
matchNumberTibble
matchNumberMatrix_onlyOne <- matchNumberTibble %>%
filter(is.na(V2),
V1 != 0) %>%
select(V1, 번호)
mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호"))
View(mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")))
matchNumberMatrix_onlyOne
head(GGdream_Data)
mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")) %>%
left_join(GGdream_Data %>% rename(V1 = 번호), by = c("V1"))
View(mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")) %>%
left_join(GGdream_Data %>% rename(V1 = 번호), by = c("V1")))
mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호"))
View(mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")))
matchNumberMatrix
matchNumberTibble
View(matchNumberTibble)
matchNumberMatrix_onlyOne <- matchNumberTibble %>%
filter(is.na(V2),
V1 != 0) %>%
select(V1, 번호)
View(matchNumberMatrix_onlyOne)
head(mergedData_KOS)
mergedData_KOS
View(mergedData_KOS)
mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호"))
View(mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")))
## SSN(486), JWH(445), WSY(537)
data_SSN <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_송새눈_240921.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0)
data_JWH <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_조원호_수정2.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
mutate(직원총수 = as.numeric(직원총수))
data_WSY <- readxl::read_excel("../data/상장법인/연구원님들/상장기업 검색_원수연.xlsx", sheet = "상장기업 리스트", col_names = T, skip = 0) %>%
rename(매출액 = `매출액(백만원)`) %>%
mutate(직원총수 = as.numeric(직원총수))
mergedData_KOS <- data_SSN %>%
bind_rows(data_JWH, data_WSY) %>%
mutate(회사명 = gsub("_0", "", 회사명)) %>%
filter(!grepl("_", 회사명)) %>%
mutate(번호 = row.names(.))
matchNumberTibble <- as.tibble(matchNumberMatrix) %>%
mutate(번호 = row.names(.))
matchNumberMatrix_onlyOne <- matchNumberTibble %>%
filter(is.na(V2),
V1 != 0) %>%
select(V1, 번호)
mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")) %>%
left_join(GGdream_Data %>% rename(V1 = 번호), by = c("V1"))
View(mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")) %>%
left_join(GGdream_Data %>% rename(V1 = 번호), by = c("V1")))
GGdream_Data
GGdream_address <- str_split(GGdream_Data$소재지지번주소, " ", simplify = T)
GGdream_address
matchNumberTibble
tail(mergedData_KOS)
nrow(mergedData_KOS)
nrow(mergedData_KOS_address)
nrow(matchNumberMatrix)
nrow(matchNumberTibble)
nrow(matchNumberMatrix_onlyOne)
matchNumberTibble
matchNumberMatrix
nrow(mergedData_KOS)
head(GGdream_Data)
GGdream_Data
GGdream_Data <- GGdream_Data %>%
mutate(소재지지번주소 = gsub("번지", "", 소재지지번주소 )) %>%
mutate(번호 = row.names(.))
GGdream_Data
tail(GGdream_Data)
matchNumberTibble <- as.tibble(matchNumberMatrix) %>%
mutate(번호 = row.names(.))
matchNumberMatrix_onlyOne <- matchNumberTibble %>%
filter(is.na(V2),
V1 != 0) %>%
select(V1, 번호)
mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")) %>%
left_join(GGdream_Data %>% rename(V1 = 번호), by = c("V1"))
head(
mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")))
View(
mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")))
GGdream_Data
GGdream_Data %>% rename(V1 = 번호)
View(GGdream_Data %>% rename(V1 = 번호))
mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")) %>%
left_join(GGdream_Data %>% rename(V1 = as.numeric(번호)), by = c("V1"))
head(GGdream_Data)
mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")) %>%
left_join(GGdream_Data %>% rename(V1 = 번호) %>% mutate(번호 = as.numeric(번호)), by = c("V1"))
mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")) %>%
left_join(GGdream_Data %>% rename(V1 = 번호) %>% mutate(V1 = as.numeric(V1)), by = c("V1"))
View(mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")) %>%
left_join(GGdream_Data %>% rename(V1 = 번호) %>% mutate(V1 = as.numeric(V1)), by = c("V1")))
final_sampleData <- mergedData_KOS %>%
left_join(matchNumberMatrix_onlyOne, by = c("번호")) %>%
left_join(GGdream_Data %>% rename(V1 = 번호) %>% mutate(V1 = as.numeric(V1)), by = c("V1"))
nrow(final_sampleData)
write.csv(final_sampleData, "final_sampleData.csv", fileEncoding = "EUC-KR")
final_sampleData
View(final_sampleData)
write.csv(final_sampleData, "final_sampleData_AA.csv")
